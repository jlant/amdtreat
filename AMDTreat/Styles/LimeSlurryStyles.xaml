<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:local="clr-namespace:AMDTreat.Styles">
  
    <!--#region NumericUpDown Styles -->
    <Style x:Key="MyNumericUpDown" TargetType="Controls:NumericUpDown" >
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MaxWidth" Value="150" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MaxHeight" Value="25" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="StringFormat" Value="F2" />
    </Style>

    <!--#endregion-->

    <!--#region Water Quality -->

    <Style x:Key="MyNumericUpDownDesignFlow" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelDesignFlowName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Setter Property="Width" Value="200" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelDesignFlowUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownHotAcidity" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="MyLabelHotAcidityName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Setter Property="Width" Value="200" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelHotAcidityUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region Lime Slurry Information - Pre Manufactored Hydrated Lime Slurry -->

    <Style x:Key="MyNumericUpDownLimeSlurryPurity" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryPurityName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Setter Property="Width" Value="200" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryPurityUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownLimeSlurryDissolutionEfficiency" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryDissolutionEfficiencyName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Setter Property="Width" Value="200" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryDissolutionEfficiencyUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownLimeSlurryUnitCost" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryUnitCostName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Setter Property="Width" Value="200" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryUnitCostUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    
    <!--#region Chemical Consumption -->
    
    <Style x:Key="radioButtonChemicalConsumptionStoichiometric" TargetType="RadioButton">
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsChecked" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsChecked" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsChecked" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="radioButtonChemicalConsumptionTitration" TargetType="RadioButton">
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsChecked" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsChecked" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsChecked" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="radioButtonChemicalConsumptionUserSpecifiedQuantity" TargetType="RadioButton">
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsChecked" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsChecked" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsChecked" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownTitration" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelTitrationName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Setter Property="Width" Value="200" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelTitrationUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownUserSpecifiedQuantity" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelUserSpecifiedQuantityName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Setter Property="Width" Value="200" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelUserSpecifiedQuantityUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionStoichiometric}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionTitration}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonChemicalConsumptionUserSpecifiedQuantity}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!--#endregion-->

    <!--#region Equipment: Storage and Dispensing System  -->

    <Style x:Key="MyNumericUpDownLimeSlurryRefillVolumeSemiTruck" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeSemiTruck}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeStraightTruck}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>            
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryRefillVolumeSemiTruckName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeSemiTruck}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeStraightTruck}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryRefillVolumeSemiTruckUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeSemiTruck}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeStraightTruck}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownLimeSlurryRefillVolumeStraightTruck" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeSemiTruck}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeStraightTruck}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryRefillVolumeStraightTruckName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeSemiTruck}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeStraightTruck}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryRefillVolumeStraightTruckUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeSemiTruck}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeStraightTruck}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownLimeSlurryRefillVolumeUserSpecified" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeSemiTruck}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeStraightTruck}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryRefillVolumeUserSpecifiedName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeSemiTruck}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeStraightTruck}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryRefillVolumeUserSpecifiedUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeSemiTruck}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeStraightTruck}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryRefillVolumeUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    

    <Style x:Key="MyNumericUpDownPHController" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPHEquipment}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPHEquipment}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelPHControllerName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPHEquipment}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPHEquipment}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelPHControllerUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPHEquipment}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPHEquipment}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownPHProbe" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPHEquipment}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPHEquipment}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelPHProbeName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPHEquipment}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPHEquipment}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelPHProbeUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPHEquipment}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPHEquipment}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownCellularTelemetry" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxCellEquipment}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxCellEquipment}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelCellularTelemetryName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxCellEquipment}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxCellEquipment}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelCellularTelemetryUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxCellEquipment}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxCellEquipment}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownCellularMonthlyCost" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxCellEquipment}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxCellEquipment}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelCellularMonthlyCostName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxCellEquipment}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxCellEquipment}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelCellularMonthlyCostUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxCellEquipment}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxCellEquipment}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="MyNumericUpDownSiliconeRubberHeatBlanketQuantity" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelSiliconeRubberHeatBlanketQuantityName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelSiliconeRubberHeatBlanketQuantityUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownSiliconeRubberHeatBlanketUnitCost" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelSiliconeRubberHeatBlanketUnitCostName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelSiliconeRubberHeatBlanketUnitCostUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownSiliconeRubberHeatBlanketPowerRequirement" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelSiliconeRubberHeatBlanketPowerRequirementName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelSiliconeRubberHeatBlanketPowerRequirementUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownSiliconeRubberHeatBlanketHoursPerDay" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelSiliconeRubberHeatBlanketHoursPerDayName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelSiliconeRubberHeatBlanketHoursPerDayUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownSiliconeRubberHeatBlanketMonthsPerYear" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelSiliconeRubberHeatBlanketMonthsPerYearName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelSiliconeRubberHeatBlanketMonthsPerYearUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxSiliconeRubberHeatBlanket}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownTubingHeatTracingLength" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelTubingHeatTracingLengthName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelTubingHeatTracingLengthUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownTubingHeatTracingUnitCost" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelTubingHeatTracingUnitCostName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelTubingHeatTracingUnitCostUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownTubingHeatTracingPowerRequirement" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelTubingHeatTracingPowerRequirementName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelTubingHeatTracingPowerRequirementUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownTubingHeatTracingHoursPerDay" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelTubingHeatTracingHoursPerDayName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelTubingHeatTracingHoursPerDayUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownTubingHeatTracingMonthsPerYear" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelTubingHeatTracingMonthsPerYearName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelTubingHeatTracingMonthsPerYearUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxTubingHeatTracing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownLimeSlurryTankFoundationConcreteSlabThickness" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryTankFoundationConcreteSlabThicknessName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryTankFoundationConcreteSlabThicknessUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownLimeSlurryTankFoundationConcreteMaterialAndPlacement" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryTankFoundationConcreteMaterialAndPlacementName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryTankFoundationConcreteMaterialAndPlacementUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryTankFoundationAreaName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--<Style x:Key="radioButtonLimeSlurryTankFoundationAreaTankHeight" TargetType="RadioButton">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="radioButtonLimeSlurryTankFoundationAreaUserSpecified" TargetType="RadioButton">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>-->
    
    <Style x:Key="MyNumericUpDownLimeSlurryTankFoundationAreaTankHeight" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaTankHeight}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaTankHeight}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaTankHeight}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaTankHeight}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False" />
            </MultiDataTrigger>            
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryTankFoundationAreaTankHeightUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaTankHeight}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaTankHeight}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaTankHeight}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaTankHeight}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="radioButtonLimeSlurryTankFoundationAreaUserSpecifiedName" TargetType="RadioButton">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownLimeSlurryTankFoundationAreaUserSpecified" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaUserSpecified}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaUserSpecified}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaUserSpecified}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaUserSpecified}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelLimeSlurryTankFoundationAreaUserSpecifiedUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaUserSpecified}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaUserSpecified}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="False" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaUserSpecified}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=checkBoxLimeSlurryTankFoundation}" Value="True" />
                    <Condition Binding="{Binding IsChecked, ElementName=radioButtonLimeSlurryTankFoundationAreaUserSpecified}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownPumpHousingCost" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPumpHousing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPumpHousing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelPumpHousingCostName" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPumpHousing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPumpHousing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelPumpHousingCostUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPumpHousing}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=checkBoxPumpHousing}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Sizing Summary -->

    <Style x:Key="MyTextBlockSlurrySpecificGravityValue" TargetType="TextBlock" BasedOn="{StaticResource MyTextBlockPropertyValue}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="Opacity" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyTextBlockSlurryDensityValue" TargetType="TextBlock" BasedOn="{StaticResource MyTextBlockPropertyValue}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="Opacity" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyTextBlockLimeSlurryFeedRateValue" TargetType="TextBlock" BasedOn="{StaticResource MyTextBlockPropertyValue}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="Opacity" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyTextBlockLimeSlurryDailyConsumptionDryTonsValue" TargetType="TextBlock" BasedOn="{StaticResource MyTextBlockPropertyValue}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="Opacity" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyTextBlockLimeSlurryDailyConsumptionGallonsValue" TargetType="TextBlock" BasedOn="{StaticResource MyTextBlockPropertyValue}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="Opacity" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyTextBlockLimeSlurryAnnualConsumptionDryTonsValue" TargetType="TextBlock" BasedOn="{StaticResource MyTextBlockPropertyValue}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="Opacity" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyTextBlockLimeSlurryAnnualConsumptionGallonsValue" TargetType="TextBlock" BasedOn="{StaticResource MyTextBlockPropertyValue}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="Opacity" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyTextBlockLimeSlurryDaysOfTreatmentPerTruckLoadValue" TargetType="TextBlock" BasedOn="{StaticResource MyTextBlockPropertyValue}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="Opacity" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyTextBlockLimeSlurryDaysOfExcessSupplyValue" TargetType="TextBlock" BasedOn="{StaticResource MyTextBlockPropertyValue}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="Opacity" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Capital Costs -->

    <Style x:Key="MyNumericUpDownSystemInstallCostMultiplier" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonSystemInstallCostMultiplier}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonSystemInstallCostUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelSystemInstallCostMultiplierUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonSystemInstallCostMultiplier}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonSystemInstallCostUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownSystemInstallCostUserSpecified" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonSystemInstallCostMultiplier}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonSystemInstallCostUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelSystemInstallUserSpecifiedCostUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyUnits}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonSystemInstallCostMultiplier}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonSystemInstallCostUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region Annual Costs -->
    <Style x:Key="MyLabelAnnualCostUnits" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyName}">
        <Setter Property="Width" Value="60" />
        <Setter Property="Margin" Value="1" />
    </Style>

    <Style x:Key="MyLabelAnnualCostChemicalEstimate" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyValue}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownAnnualCostChemicalUserSpecified" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalEstimate}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostChemicalUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownAnnualCostOperationAndMaintanenceMultiplier" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostOperationAndMaintanenceMultiplier}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostOperationAndMaintanenceUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownAnnualCostOperationAndMaintanenceUserSpecified" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostOperationAndMaintanenceMultiplier}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostOperationAndMaintanenceUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyLabelAnnualCostElectricEstimate" TargetType="Label" BasedOn="{StaticResource MyLabelPropertyValue}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostElectricEstimate}" Value="True">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostElectricUserSpecified}" Value="True">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyNumericUpDownAnnualCostElectricUserSpecified" TargetType="Controls:NumericUpDown" BasedOn="{StaticResource MyNumericUpDown}" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostElectricEstimate}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, ElementName=radioButtonAnnualCostElectricUserSpecified}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->


    <!--#region Expander Styles -->
    <Style x:Key="MyExpander" TargetType="Expander">
        <Setter Property="Padding" Value="3" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="MyExpanderStorageAndDispensingSystem" TargetType="Expander" BasedOn="{StaticResource MyExpander}">
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="Header" Value="Storage and Dispensing System" />
    </Style>

    <Style x:Key="MyExpanderLimeSlurryTankFoundationAndPumpHousing" TargetType="Expander" BasedOn="{StaticResource MyExpander}">
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Header" Value="Lime Slurry Tank Foundation And Pump Housing" />
    </Style>

    <!--#endregion-->

</ResourceDictionary>